to start db use mongod --dbpath ~/pathtopokemon/data
to start server use npm start

TODO
- make input fields (such as lv) accept only numbers ABOUT DONE, DOUBLE CHECK
- fill database (abilities, moves, met locations, games, pokeball, items) ALMOST DONE, NEED TO SET REFERENCES AND FILL POKEDEX & ITEMS
- generate save file DONE (still need to change default email of jimmychimmyy to DEFAULT@EXTREMESAVES.COM"))
- update save file every time a pokemon is edited (save changes is clicked inside editbox) DONE
- trainer information needs to save (when update trainer is clicked) DONE BUT NEED TO MAKE CHANGES IN SERVER TOO (missing server side function)
- need to load save file into edit box and home page/trainer info) ABOUT DONE

12/21/16
- need to fill db
	- pokedex { species, typeA, typeB, [moves], [abilites], [locations] } *note that each move must also have a reference to learned at level
	- items
	- locations
- need to send email to user when they begin
- need to save changes when update trainer is clicked inside /edit
- need to make global setters (make all shiny/change pokeball) 
- need to connect Save Changes button inside editbox to server to update savefile inside db
- need to perform checks (eg. bulbasaur can only learn from this movepool) DO THIS AFTER FILLING UP DB
- will also need a level/move check (eg. this move can only be learned at this level and up)

12/23/16
- started getting data to fill species table
- for learnedmoves, need to keep the second file, delete the first
- then add each move as a key value pair into the species (pokedex) table. (ie. { move : levelLearned })

- for specieslocations, need to remove files that give description and keep files that give location (try keeping files that have "trade/migrate")

- use the csv files to get species type and abilities (grep for National))
